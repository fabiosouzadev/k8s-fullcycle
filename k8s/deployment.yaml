apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      name: "goserver"
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "fabiosouzadev/k8s-fullcycle:v11"

          startupProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            periodSeconds: 3
            failureThreshold: 10
            initialDelaySeconds: 10
          
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            periodSeconds: 3
            failureThreshold: 1
            timeoutSeconds: 1

          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config

      volumes:
        - name: config
          configMap:
            name: goserver-family-env
            items:
              - key: members
                path: "family.txt"

# template: define como os pods ser√£o criados.
# Olhe pod.yaml 
### Variaveis de ambiente ###
### USANDO env #####
# ....
# env:
#   - name: NOME
#     value: "Fabio"
#   - name: IDADE
#     value: "36"
# ....
# EXEC
# $ kubectl apply -f k8s/configmap.yaml
# $ kubectl delete deployments.app goserver
# $ kubectl apply -f k8s/deployment.yaml

## Variaveis de ambiente com ConfigMap ##
# ....
# env:
#   - name: NOME
#     valueFrom:
#       configMapKeyRef:
#         name: goserver-env
#         key: NOME
#   - name: IDADE
#     valueFrom:
#       configMapKeyRef:
#         name: goserver-env
#         key: IDADE
# ....
# EXEC
# $ kubectl apply -f k8s/configmap.yaml
# $ kubectl delete deployments.app goserver
# $ kubectl apply -f k8s/deployment.yaml

#### USANDO envFrom (pegando todas as variaveis do ConfigMap) ####
# ....
# spec
#   containers:
# ...
#     envFrom:
#       - configMapRef:
#           name: goserver-env
# ....
# EXEC
# $ kubectl apply -f k8s/configmap.yaml
# $ kubectl delete deployments.app goserver
# $ kubectl apply -f k8s/deployment.yaml

#### Injetando ConfigMap ####
#....
# spec
#   containers:
# ....
#     volumeMounts:
#       - mountPath: "/go/myfamily"
#         name: config
# ....
#   volumes:
#     - name: config
#       configMap:
#         name: goserver-family-env
#         items:
#           - key: members
#             path: "family.txt"
# ....
# EXEC
# $ kubectl apply -f k8s/configmap-family.yaml
# $ kubectl delete deployments.app goserver
# $ kubectl apply -f k8s/deployment.yaml

#### Secret ####
# ....
# spec
#   containers:
# ...
#     envFrom:
#       - secretRef:
#           name: goserver-secret
# ....
# EXEC
# $ kubectl apply -f k8s/secret.yaml
# $ kubectl delete deployments.app goserver
# $ kubectl apply -f k8s/deployment.yaml
